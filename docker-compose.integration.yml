version: '3.8'
services:
  docker-symfony-web:
    container_name: docker-symfony-web
    build:
      context: ./docker/nginx
      args: { UID: 1000 }
    # ports: [ "300:80" ]  # Comentado - Traefik maneja los puertos
    volumes:
      - ./public:/appdata/www/public
    networks:
      - docker-symfony-network
      - traefik-proxy
    depends_on: [ docker-symfony-be ]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-proxy"
      - "traefik.http.routers.flexystock-api-http.rule=Host(`int.api.flexystock.app`)"
      - "traefik.http.routers.flexystock-api-http.entrypoints=web"
      - "traefik.http.routers.flexystock-api.rule=Host(`int.api.flexystock.app`)"
      - "traefik.http.routers.flexystock-api.entrypoints=websecure"
      - "traefik.http.routers.flexystock-api.tls=true"
      - "traefik.http.routers.flexystock-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.flexystock-api.loadbalancer.server.port=80"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS,PATCH"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolalloworiginlist=https://int.app.flexystock.app"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.routers.flexystock-api.middlewares=api-cors"

  docker-symfony-be:
    container_name: docker-symfony-be
    build:
      context: ./docker/php
      args: { UID: 1000 }
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
      APP_ENV: dev
      HOST_WORKDIR: "${HOST_WORKDIR}"
    volumes:
      - ./:/appdata/www
      - ~/.ssh/id_rsa:/home/appuser/.ssh/id_rsa
      - /var/run/docker.sock:/var/run/docker.sock
    command: /appdata/www/docker/php/run-with-migrations.sh
    networks: [ docker-symfony-network ]
    depends_on: [ docker-symfony-dbMain ]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"

  docker-symfony-messenger:
    container_name: docker-symfony-messenger
    build:
      context: ./docker/php
      args: { UID: 1000 }
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
      APP_ENV: dev
      DATABASE_URL: mysql://user:password@docker-symfony-dbMain:3306/docker_symfony_databaseMain
    volumes:
      - ./:/appdata/www
      - ~/.ssh/id_rsa:/home/appuser/.ssh/id_rsa
      - /var/run/docker.sock:/var/run/docker.sock
    command: /appdata/www/docker/php/wait-for-db.sh
    networks: [ docker-symfony-network ]
    depends_on: [ docker-symfony-be, docker-symfony-dbMain ]
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"

  docker-symfony-dbMain:
    container_name: docker-symfony-dbMain
    image: mysql:8.0
    ports: [ "40099:3306" ]
    environment:
      MYSQL_DATABASE: "docker_symfony_databaseMain"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "root"
      TZ: "Europe/Madrid"
    command: "mysqld --sql_mode=STRICT_ALL_TABLES,NO_ENGINE_SUBSTITUTION"
    volumes:
      - docker-symfony-databaseMain-data:/var/lib/mysql
    networks: [ docker-symfony-network ]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"

volumes:
  docker-symfony-databaseMain-data:

networks:
  docker-symfony-network:
    name: docker-symfony-network
    driver: bridge
  traefik-proxy:
    external: true
    name: traefik-proxy